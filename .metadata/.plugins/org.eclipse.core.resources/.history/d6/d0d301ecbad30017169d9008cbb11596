package br.com.mimilis.sacmi.fin.tools;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;

import br.com.mimilis.sacmi.fin.domain.LivroRazao;
import br.com.mimilis.sacmi.geral.ref.MesRef;

public class ImportarExcel {
	
	private String filePath;
	
	public ImportarExcel(String filePath) {
		this.filePath = filePath;
	}
	
	protected LivroRazao importDataSet_Jul2017Nov2017(Sheet sheet, Integer mes, Integer ano) throws Exception {
		
		if(sheet != null && mes != null && ano != null) {
			
			String H_DESCRICAO = "Empresa";
			String H_DATA = "Data";
			String H_R_DINHEIRO = "Entrada";
			String H_R_DEBITO = "Débito c/2,39% taxa";
			String H_R_CREDITO = "Crédito à vista C/ 3,19% taxa";
			String H_DESPESA = "Saída";
			
			String H_STOP = "TOTAL";
			
			Integer rowNumStart = -1;
			Integer headDescricao = -1;
			Integer headData = -1;
			Integer headRecDinheiro = -1;
			Integer headRecDebito = -1;
			Integer headRecCredito = -1;
			Integer headDespesa = -1;
			
			boolean isMapped = false;
			
			String content;
			Integer colInd;
			
			//MAPEAMENTO
			for(Row row : sheet) {
				
				for(Cell cell : row) {
					content = cell.getStringCellValue();
					colInd = cell.getColumnIndex();
					
					if(matchHeaderContent(H_DESCRICAO, content)) {
						headDescricao = colInd;
					}
					if(matchHeaderContent(H_DATA, content)) {
						headData = colInd;
					}
					if(matchHeaderContent(H_R_DINHEIRO, content)) {
						headRecDinheiro = colInd;
					}
					if(matchHeaderContent(H_R_DEBITO, content)) {
						headRecDebito = colInd;
					}
					if(matchHeaderContent(H_R_CREDITO, content)) {
						headRecCredito = colInd;
					}
					if(matchHeaderContent(H_DESPESA, content)) {
						headDespesa = colInd;
					}
				}
				
				if(validateNonNegativeValues(headDescricao, headData, headRecDinheiro, headRecDebito, headRecCredito, headDespesa)) {
					rowNumStart = row.getRowNum();
					isMapped = true;
					break;
				}
			}
			
			if(!isMapped) {
				throw new Exception("Valores de referência não encontrados");
			}
			
			//LEITURA
			LivroRazao lr = new LivroRazao(null, mes, ano);
			for(Integer rowNum = rowNumStart; rowNum <= sheet.getLastRowNum(); rowNum++) {
				
			}
		}
		
		return null;
	}
	
	protected LivroRazao importDataSet_Mai2017Jun2017(Sheet sheet, Integer mes, Integer ano) {
		//TODO
		return null;
	}
	
	protected LivroRazao importDataSet_Abr2016Abr2017(Sheet sheet, Integer mes, Integer ano) {
		//TODO
		return null;
	}
	
	private boolean matchHeaderContent(String header, String content) {
		if( header != null && !header.isEmpty() && content != null && content.isEmpty() ) {
			return header.trim().toUpperCase().equals( content.trim().toUpperCase() );
		}
		return false;
	}
	
	private boolean validateNonNegativeValues(Integer...values) {
		if(values != null && values.length > 0) {
			for(Integer value : values) {
				if(value < 0) {
					return false;
				}
			}
			return true;
		}
		return false;
	}
	
}
