package br.com.mimilis.sacmi.fin.tools;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;

import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.openxml4j.exceptions.InvalidFormatException;
import org.apache.poi.openxml4j.opc.OPCPackage;
import org.apache.poi.poifs.filesystem.NPOIFSFileSystem;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class ExcelReaderTools {
	
	public static final Character INPUT_MODE_FILE = 'F';
	public static final Character INPUT_MODE_INPUT_STREAM = 'S';
	
	private String filePath;
	private FileInputStream stream;
	private File file;
	private boolean isXlsxFile;
	
	private Character inputMode = INPUT_MODE_FILE;
	
	private Workbook workbook;
	private OPCPackage opcPac;
	private NPOIFSFileSystem poiFileSys;
	
	//--- CONSTRUTORES
	public ExcelReaderTools(String filePath) throws Exception {
		validator(filePath, this.inputMode);
		this.filePath = filePath;
	}
	
	public ExcelReaderTools(String filePath, Character inputMode) throws Exception {
		validator(filePath, inputMode);
		this.filePath = filePath;
		this.inputMode = inputMode;
	}
	
	//--- METODOS
	private void validator(String filePath, Character inputMode) throws Exception {
		if(filePath == null || "".equals(filePath)) {
			throw new Exception("Caminho para arquivo inválido");
		}
		
		if( filePath.contains(".xlsx") ) {
			isXlsxFile = true;
		}
		else if(filePath.contains(".xls")) {
			isXlsxFile = false;
		}
		else {
			throw new Exception("Tipo de arquivo não é do tipo excel");
		}
		
		if(!INPUT_MODE_FILE.equals(inputMode) && !INPUT_MODE_INPUT_STREAM.equals(inputMode) ) {
			throw new Exception("Formato de input não suportado");
		}
	}
	
	public void openWorkbook() throws InvalidFormatException, IOException {
		
		if( INPUT_MODE_FILE.equals(inputMode) ) {
			file = new File(filePath);
		}
		
		else if( INPUT_MODE_INPUT_STREAM.equals(inputMode) ) {
			stream = new FileInputStream(filePath);
		}
		
		if(isXlsxFile) {
			if(file != null) {
				opcPac = OPCPackage.open(file);
			}
			else {
				opcPac = OPCPackage.open(stream);
			}
			workbook = new XSSFWorkbook(opcPac);
		}
		else {
			if(file != null) {
				poiFileSys = new NPOIFSFileSystem(file);
			}
			else {
				poiFileSys = new NPOIFSFileSystem(stream);
			}
			workbook = new HSSFWorkbook(poiFileSys.getRoot(), true);
		}
		
	}
	
	public void closeWorkbook() throws IOException {
		
		workbook.close();
		
		if(isXlsxFile) {
			opcPac.close();
		}
		else {
			poiFileSys.close();
		}
	}

	//--- GETTERS & SETTERS
	public Workbook getWorkbook() {
		return workbook;
	}
}
